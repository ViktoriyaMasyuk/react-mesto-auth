{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\n\n//регистрация пользователя\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"password\": \"somepassword\",\n      \"email\": \"email@yandex.ru\"\n    })\n  }).then(response => {\n    try {\n      if (response.status === 200) {\n        return response.json();\n      }\n    } catch (e) {\n      return e;\n    }\n  }).then(res => {\n    return res;\n  }).catch(err => console.log(err));\n};\n\n//\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(response => response.json()).then(data => {\n    if (data.jwt) {\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    }\n  }).catch(err => console.log(err));\n};\n// // отправляем запрос на роут аутентификации\n// fetch(`${BASE_URL}/users/me`, {\n//   method: 'GET',\n//   headers: {\n//     \"Content-Type\": \"application/json\",\n//     \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n//   }\n// });","map":{"version":3,"names":["BASE_URL","register","password","email","fetch","method","headers","body","JSON","stringify","then","response","status","json","e","res","catch","err","console","log","authorize","data","jwt","localStorage","setItem"],"sources":["/Users/vika/dev/react-mesto-auth/src/utils/Auth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\n//регистрация пользователя\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\"password\": \"somepassword\",\n    \"email\": \"email@yandex.ru\" })\n  })\n  .then((response) => {\n    try {\n      if (response.status === 200){\n        return response.json();\n      }\n    } catch(e){\n      return (e)\n    }\n  })\n  .then((res) => {\n    return res;\n  })\n  .catch((err) => console.log(err));\n}; \n\n//\n  export const authorize = (email, password) => {\n    return fetch(`${BASE_URL}/signin`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({email, password})\n    })\n    .then((response => response.json()))\n    .then((data) => {\n      if (data.jwt){\n        localStorage.setItem('jwt', data.jwt);\n        return data;\n      }\n    })\n    .catch(err => console.log(err))\n  }; \n// // отправляем запрос на роут аутентификации\n// fetch(`${BASE_URL}/users/me`, {\n//   method: 'GET',\n//   headers: {\n//     \"Content-Type\": \"application/json\",\n//     \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n//   }\n// }); \n\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;;AAEvD;AACA,OAAO,MAAMC,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAC3C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAC,UAAU,EAAE,cAAc;MAChD,OAAO,EAAE;IAAkB,CAAC;EAC9B,CAAC,CAAC,CACDC,IAAI,CAAEC,QAAQ,IAAK;IAClB,IAAI;MACF,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAC;QAC1B,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;MACxB;IACF,CAAC,CAAC,OAAMC,CAAC,EAAC;MACR,OAAQA,CAAC;IACX;EACF,CAAC,CAAC,CACDJ,IAAI,CAAEK,GAAG,IAAK;IACb,OAAOA,GAAG;EACZ,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACnC,CAAC;;AAED;AACE,OAAO,MAAMG,SAAS,GAAGA,CAACjB,KAAK,EAAED,QAAQ,KAAK;EAC5C,OAAOE,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACN,KAAK;MAAED;IAAQ,CAAC;EACxC,CAAC,CAAC,CACDQ,IAAI,CAAEC,QAAQ,IAAIA,QAAQ,CAACE,IAAI,CAAC,CAAE,CAAC,CACnCH,IAAI,CAAEW,IAAI,IAAK;IACd,IAAIA,IAAI,CAACC,GAAG,EAAC;MACXC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEH,IAAI,CAACC,GAAG,CAAC;MACrC,OAAOD,IAAI;IACb;EACF,CAAC,CAAC,CACDL,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACjC,CAAC;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}