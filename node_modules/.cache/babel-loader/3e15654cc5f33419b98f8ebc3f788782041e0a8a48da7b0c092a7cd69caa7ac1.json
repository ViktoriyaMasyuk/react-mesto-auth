{"ast":null,"code":"var _jsxFileName = \"/Users/vika/dev/react-mesto-auth/src/components/App.js\",\n  _s = $RefreshSig$();\nimport \"../index.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { Route, Routes, ProtectedRoute, Navigate, useNavigate } from 'react-router-dom';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport api from \"../utils/Api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport imageResult from \"../images/Unionok2.svg\";\nimport imageError from \"../images/Union-2.svg\";\nimport ProtectedRouteElement from \"./ProtectedRoute\";\nimport * as Auth from \"../utils/Auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //попап аватара\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  //попап профиля\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  //попап добавления карточки\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({\n    name: \"\",\n    link: \"\"\n  });\n  //информация о пользователе\n  const [currentUser, setCurrentUser] = useState({});\n  //информация о карточках\n  const [cards, setCards] = useState([]);\n  //положительный попап входа\n  const [isInfoTooltipResultPopupOpen, setInfoTooltipResultPopupOpen] = useState(false);\n  //попап ошибки входа\n  const [isInfoTooltipErrorPopupOpen, setInfoTooltipErrorPopupOpen] = useState(false);\n  //статус входа в систему пользователя\n  const [isLoggedIn, setLoggedIn] = useState();\n  //навигация\n  const navigate = useNavigate();\n  //данные пользователя\n  const [userData, setUserData] = useState(false);\n\n  //получение информации о пользоывателе и массива карточек\n  useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()]).then(_ref => {\n      let [currentUser, cards] = _ref;\n      setCurrentUser(currentUser);\n      setCards(cards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  //функции открытия попапов\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  function handleTooltipErrorClick() {\n    setInfoTooltipErrorPopupOpen(true);\n  }\n  function handleTooltipResultClick() {\n    setInfoTooltipResultPopupOpen(true);\n  }\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n  //функция изменения статуса логина\n  function handleLogin() {\n    setLoggedIn(true);\n  }\n  //функция закрытия попапов\n  function handleCloseAllPopups() {\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setInfoTooltipErrorPopupOpen(false);\n    setInfoTooltipResultPopupOpen(false);\n    setSelectedCard({\n      name: \"\",\n      link: \"\"\n    });\n  }\n\n  //функция постановки лайков\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    if (!isLiked) {\n      api.setLike(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.error(err);\n      });\n    } else {\n      api.unsetLike(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.error(err);\n      });\n    }\n  }\n\n  //функция удаления карточек\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(state => state.filter(c => c._id !== card._id && c));\n      handleCloseAllPopups();\n    }).catch(err => {\n      console.log(`${err}`);\n    });\n  }\n\n  //обновление информации о пользователе\n  function handleUpdateUser(data) {\n    api.updateUserInfo(data).then(newUser => {\n      setCurrentUser(newUser);\n      handleCloseAllPopups();\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  //обновление аватара\n  function handleUpdateAvatar(data) {\n    api.changeAvatar(data).then(newAvatar => {\n      setCurrentUser(newAvatar);\n      handleCloseAllPopups();\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n  //Добавление новой карточки\n  function handleAddPlace(data) {\n    api.addNewCard(data).then(newCard => {\n      setCards([newCard, ...cards]);\n      handleCloseAllPopups();\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n  //регистрация пользователя\n  function handleRegisterUser(email, password) {\n    Auth.register(email, password).then(data => {\n      if (data) {\n        handleTooltipResultClick();\n        console.log(\"sucess\");\n        navigate(\"/sign-in\", {\n          replace: true\n        });\n      }\n    }).catch(err => {\n      navigate(\"/sign-up\");\n      handleTooltipErrorClick();\n      console.log(err);\n    });\n  }\n\n  //проверка токена\n  function tokenCheck() {\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      Auth.getContent(jwt).then(res => {\n        if (res) {\n          const userData = {\n            email: res.email\n          };\n          handleLogin();\n          setUserData(userData);\n          navigate(\"/\", {\n            replace: true\n          });\n        }\n      });\n    }\n  }\n  useEffect(() => {\n    tokenCheck();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        email: email,\n        onSignOut: handleSignOut,\n        isMobileMenuOpen: isMobileMenuOpen,\n        handleClickOpenMobileMenu: handleClickOpenMobileMenu,\n        isLoggedIn: isLoggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRouteElement, {\n            element: Main,\n            isLoggedIn: isLoggedIn,\n            onEditAvatar: handleEditAvatarClick,\n            onEditProfile: handleEditProfileClick,\n            onAddPlace: handleAddPlaceClick,\n            onCardClick: handleCardClick,\n            cards: cards,\n            onCardLike: handleCardLike,\n            onCardDelete: handleCardDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          element: /*#__PURE__*/_jsxDEV(Register, {\n            onRegister: handleRegisterUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-in\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            handleLogin: handleLogin,\n            handleTooltipError: handleTooltipErrorClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: handleCloseAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: handleCloseAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: handleCloseAllPopups,\n        onAddPlace: handleAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        name: \"basket\",\n        title: \"Новое место\",\n        buttonText: \"Вы уверены?\",\n        id: \"delete\",\n        onClose: handleCloseAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        isOpen: selectedCard,\n        card: selectedCard,\n        onClose: handleCloseAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        title: \"Вы успешно зарегистрировались!\",\n        src: imageResult,\n        isOpen: isInfoTooltipResultPopupOpen,\n        onClose: handleCloseAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        title: \"Что-то пошло не так! Попробуйте еще раз!\",\n        src: imageError,\n        isOpen: isInfoTooltipErrorPopupOpen,\n        onClose: handleCloseAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/bTqtn5K8KR1lGOzgsr8vOsfyTY=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Route","Routes","ProtectedRoute","Navigate","useNavigate","Header","Main","Footer","Register","Login","PopupWithForm","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ImagePopup","InfoTooltip","api","CurrentUserContext","imageResult","imageError","ProtectedRouteElement","Auth","jsxDEV","_jsxDEV","App","_s","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","name","link","currentUser","setCurrentUser","cards","setCards","isInfoTooltipResultPopupOpen","setInfoTooltipResultPopupOpen","isInfoTooltipErrorPopupOpen","setInfoTooltipErrorPopupOpen","isLoggedIn","setLoggedIn","navigate","userData","setUserData","Promise","all","getUserInfo","getInitialCards","then","_ref","catch","err","console","log","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleTooltipErrorClick","handleTooltipResultClick","handleCardClick","card","handleLogin","handleCloseAllPopups","handleCardLike","isLiked","likes","some","i","_id","setLike","newCard","state","map","c","error","unsetLike","handleCardDelete","deleteCard","filter","handleUpdateUser","data","updateUserInfo","newUser","handleUpdateAvatar","changeAvatar","newAvatar","handleAddPlace","addNewCard","handleRegisterUser","email","password","register","replace","tokenCheck","jwt","localStorage","getItem","getContent","res","Provider","value","children","className","onSignOut","handleSignOut","isMobileMenuOpen","handleClickOpenMobileMenu","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onEditAvatar","onEditProfile","onAddPlace","onCardClick","onCardLike","onCardDelete","onRegister","handleTooltipError","isOpen","onClose","onUpdateUser","onUpdateAvatar","title","buttonText","id","src","_c","$RefreshReg$"],"sources":["/Users/vika/dev/react-mesto-auth/src/components/App.js"],"sourcesContent":["import \"../index.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { Route, Routes, ProtectedRoute, Navigate, useNavigate } from 'react-router-dom';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport api from \"../utils/Api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport imageResult from \"../images/Unionok2.svg\";\nimport imageError from \"../images/Union-2.svg\";\nimport ProtectedRouteElement from \"./ProtectedRoute\";\nimport * as Auth from \"../utils/Auth\";\n\n\nfunction App() {\n  //попап аватара\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] =\n    useState(false);\n  //попап профиля\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] =\n    useState(false);\n  //попап добавления карточки\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({\n    name: \"\",\n    link: \"\",\n  });\n  //информация о пользователе\n  const [currentUser, setCurrentUser] = useState({});\n  //информация о карточках\n  const [cards, setCards] = useState([]);\n  //положительный попап входа\n  const [isInfoTooltipResultPopupOpen, setInfoTooltipResultPopupOpen] = useState(false);\n  //попап ошибки входа\n  const [isInfoTooltipErrorPopupOpen, setInfoTooltipErrorPopupOpen] = useState(false);\n  //статус входа в систему пользователя\n  const [isLoggedIn, setLoggedIn] = useState();\n//навигация\n  const navigate = useNavigate();\n//данные пользователя\nconst [userData, setUserData] = useState(false);\n\n//получение информации о пользоывателе и массива карточек\n  useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\n      .then(([currentUser, cards]) => {\n        setCurrentUser(currentUser);\n        setCards(cards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n//функции открытия попапов\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  function handleTooltipErrorClick() {\n    setInfoTooltipErrorPopupOpen(true);\n  }\n  function handleTooltipResultClick() {\n    setInfoTooltipResultPopupOpen(true);\n  }\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n  //функция изменения статуса логина\n  function handleLogin() {\n    setLoggedIn(true);\n } \n //функция закрытия попапов\n  function handleCloseAllPopups() {\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setInfoTooltipErrorPopupOpen(false);\n    setInfoTooltipResultPopupOpen(false);\n    setSelectedCard({ name: \"\", link: \"\" });\n  }\n  \n//функция постановки лайков\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    if (!isLiked) {\n      api\n        .setLike(card._id)\n        .then((newCard) => {\n          setCards((state) =>\n            state.map((c) => (c._id === card._id ? newCard : c))\n          );\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    } else {\n      api\n        .unsetLike(card._id)\n        .then((newCard) => {\n          setCards((state) =>\n            state.map((c) => (c._id === card._id ? newCard : c))\n          );\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    }\n  }\n\n  //функция удаления карточек\n  function handleCardDelete(card) {\n    api\n      .deleteCard(card._id)\n      .then(() => {\n        setCards((state) => state.filter((c) => c._id !== card._id && c));\n        handleCloseAllPopups();\n      })\n      .catch((err) => {\n        console.log(`${err}`);\n      });\n  }\n\n  //обновление информации о пользователе\n  function handleUpdateUser(data) {\n    api\n      .updateUserInfo(data)\n      .then((newUser) => {\n        setCurrentUser(newUser);\n        handleCloseAllPopups();\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  //обновление аватара\n  function handleUpdateAvatar(data) {\n    api\n      .changeAvatar(data)\n      .then((newAvatar) => {\n        setCurrentUser(newAvatar);\n        handleCloseAllPopups();\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n//Добавление новой карточки\n  function handleAddPlace(data) {\n    api\n      .addNewCard(data)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        handleCloseAllPopups();\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n//регистрация пользователя\n  function handleRegisterUser(email, password) {\n    Auth.register(email, password)\n    .then((data) => {\n      if(data) {\n        handleTooltipResultClick();\n        console.log(\"sucess\");\n        navigate(\"/sign-in\", {replace: true});\n      }\n    })\n    .catch((err) => {\n      navigate(\"/sign-up\");\n      handleTooltipErrorClick();\n      console.log(err);   \n    })\n  }\n\n//проверка токена\nfunction tokenCheck() {\n  const jwt = localStorage.getItem('jwt');\n  if (jwt){\n    Auth.getContent(jwt)\n    .then((res) => {\n      if (res){\n        const userData = {\n          email: res.email\n        }\n        handleLogin();\n        setUserData(userData)\n        navigate(\"/\", {replace: true})\n      }\n    });\n}\n} \n\nuseEffect(() => {\ntokenCheck();\n}, [])\n\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <Header \n        email={email}\n        onSignOut={handleSignOut}\n            isMobileMenuOpen={isMobileMenuOpen}\n            handleClickOpenMobileMenu={handleClickOpenMobileMenu}\n            isLoggedIn={isLoggedIn}/>\n        <Routes>\n         <Route path=\"/\" element={\n         <ProtectedRouteElement\n           element={Main}\n           isLoggedIn={isLoggedIn}\n           onEditAvatar={handleEditAvatarClick}\n           onEditProfile={handleEditProfileClick}\n           onAddPlace={handleAddPlaceClick}\n           onCardClick={handleCardClick}\n           cards={cards}\n           onCardLike={handleCardLike}\n           onCardDelete={handleCardDelete}\n           \n           />} />  \n         <Route \n         path=\"/sign-up\"\n         element={<Register onRegister={handleRegisterUser}/>}\n        />\n        <Route \n        path=\"/sign-in\"\n        element={<Login handleLogin={handleLogin} handleTooltipError={handleTooltipErrorClick}/>}\n        />\n\n        </ Routes >\n        <Footer />\n\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={handleCloseAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={handleCloseAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={handleCloseAllPopups}\n          onAddPlace={handleAddPlace}\n        />\n        <PopupWithForm\n          name={\"basket\"}\n          title={\"Новое место\"}\n          buttonText={\"Вы уверены?\"}\n          id={\"delete\"}\n          onClose={handleCloseAllPopups}\n        />\n        <ImagePopup\n          isOpen={selectedCard}\n          card={selectedCard}\n          onClose={handleCloseAllPopups}\n        />\n        <InfoTooltip \n        title={\"Вы успешно зарегистрировались!\"}\n        src={imageResult}\n        isOpen={isInfoTooltipResultPopupOpen}\n        onClose={handleCloseAllPopups}\n        />\n        <InfoTooltip \n        title={\"Что-то пошло не так! Попробуйте еще раз!\"}\n        src={imageError}\n        isOpen={isInfoTooltipErrorPopupOpen}\n        onClose={handleCloseAllPopups}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}