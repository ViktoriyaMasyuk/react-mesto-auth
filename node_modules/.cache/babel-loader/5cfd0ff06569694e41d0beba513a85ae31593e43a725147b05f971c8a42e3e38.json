{"ast":null,"code":"export const BASE_URL = \"https://auth.nomoreparties.co\";\nfunction checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`${res.status}`);\n}\n\n//регистрация пользователя\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password\n    })\n  }).then(checkResponse);\n};\n\n//авторизация пользователя\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password\n    })\n  }).then(checkResponse).then(data => {\n    if (data.jwt) {\n      localStorage.setItem(\"jwt\", data.jwt);\n      return data;\n    }\n  }).catch(err => console.log(err));\n};\n// // отправляем запрос на роут аутентификации\n// fetch(`${BASE_URL}/users/me`, {\n//   method: 'GET',\n//   headers: {\n//     \"Content-Type\": \"application/json\",\n//     \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n//   }\n// });","map":{"version":3,"names":["BASE_URL","checkResponse","res","ok","json","Promise","reject","status","register","email","password","fetch","method","headers","body","JSON","stringify","then","authorize","data","jwt","localStorage","setItem","catch","err","console","log"],"sources":["/Users/vika/dev/react-mesto-auth/src/utils/Auth.js"],"sourcesContent":["export const BASE_URL = \"https://auth.nomoreparties.co\";\n\nfunction checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`${res.status}`);\n}\n\n//регистрация пользователя\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password,\n    }),\n  })\n  .then(checkResponse)\n};\n\n//авторизация пользователя\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password,\n    }),\n  })\n    .then(checkResponse)\n    .then((data) => {\n      if (data.jwt) {\n        localStorage.setItem(\"jwt\", data.jwt);\n        return data;\n      }\n    })\n    .catch((err) => console.log(err));\n};\n// // отправляем запрос на роут аутентификации\n// fetch(`${BASE_URL}/users/me`, {\n//   method: 'GET',\n//   headers: {\n//     \"Content-Type\": \"application/json\",\n//     \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n//   }\n// });\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAEvD,SAASC,aAAaA,CAACC,GAAG,EAAE;EAC1B,IAAIA,GAAG,CAACC,EAAE,EAAE;IACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;EACnB;EACA,OAAOC,OAAO,CAACC,MAAM,CAAE,GAAEJ,GAAG,CAACK,MAAO,EAAC,CAAC;AACxC;;AAEA;AACA,OAAO,MAAMC,QAAQ,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EAC3C,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IACjCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBP,KAAK,EAAEA,KAAK;MACZC,QAAQ,EAAEA;IACZ,CAAC;EACH,CAAC,CAAC,CACDO,IAAI,CAAChB,aAAa,CAAC;AACtB,CAAC;;AAED;AACA,OAAO,MAAMiB,SAAS,GAAGA,CAACT,KAAK,EAAEC,QAAQ,KAAK;EAC5C,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IACjCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBP,KAAK,EAAEA,KAAK;MACZC,QAAQ,EAAEA;IACZ,CAAC;EACH,CAAC,CAAC,CACCO,IAAI,CAAChB,aAAa,CAAC,CACnBgB,IAAI,CAAEE,IAAI,IAAK;IACd,IAAIA,IAAI,CAACC,GAAG,EAAE;MACZC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEH,IAAI,CAACC,GAAG,CAAC;MACrC,OAAOD,IAAI;IACb;EACF,CAAC,CAAC,CACDI,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACrC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}