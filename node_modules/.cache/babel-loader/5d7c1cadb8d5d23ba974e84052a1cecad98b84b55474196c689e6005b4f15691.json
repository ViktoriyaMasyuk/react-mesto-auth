{"ast":null,"code":"var _jsxFileName = \"/Users/vika/dev/react-mesto-auth/src/components/Login.js\";\nimport React, { useState } from \"react\";\nimport Sign from \"./Sign\";\nimport { useNavigate } from 'react-router-dom';\nimport * as Auth from '../utils/Auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login(_ref) {\n  let {\n    handleLogin\n  } = _ref;\n  // const [formValue, setFormValue] = useState({\n  //     email: '',\n  //     password: ''\n  //   })\n  // const navigate = useNavigate();\n\n  // function handleChange(e) {\n  //     const {name, value} = e.target;\n\n  //     setFormValue({\n  //       ...formValue,\n  //       [name]: value\n  //     });\n  //   }\n  // function handleSubmit(e) {\n  //     e.preventDefault();\n  //     // здесь нужно будет добавить логин\n  //     if (!formValue.email || !formValue.password){\n  //       return;\n  //     }\n  //     auth.authorize(formValue.email, formValue.password)\n  //       .then((data) => {\n  //         if (data.jwt){\n  //             setFormValue({email: '', password: ''});\n  //             handleLogin();\n  //             navigate('/', {replace: true});\n  //           }\n  //       })\n  //       .catch(err => console.log(err));\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(Sign, {\n    title: \"Вход\",\n    buttonText: \"Войти\",\n    name: \"login\"\n    // // //onEditResult={onEditResult}\n    // // //onChange={handleChange}\n    // // //onSubmit={handleSubmit}\n    // // //emailFormValue={formValue.email}\n    // // //passwordFormValue={formValue.password}\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n}\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Sign","useNavigate","Auth","jsxDEV","_jsxDEV","Login","_ref","handleLogin","title","buttonText","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vika/dev/react-mesto-auth/src/components/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Sign from \"./Sign\";\nimport {useNavigate } from 'react-router-dom';\nimport * as Auth from '../utils/Auth';\n\nfunction Login({handleLogin}) {\n    // const [formValue, setFormValue] = useState({\n    //     email: '',\n    //     password: ''\n    //   })\n    // const navigate = useNavigate();\n\n    // function handleChange(e) {\n    //     const {name, value} = e.target;\n    \n    //     setFormValue({\n    //       ...formValue,\n    //       [name]: value\n    //     });\n    //   }\n    // function handleSubmit(e) {\n    //     e.preventDefault();\n    //     // здесь нужно будет добавить логин\n    //     if (!formValue.email || !formValue.password){\n    //       return;\n    //     }\n    //     auth.authorize(formValue.email, formValue.password)\n    //       .then((data) => {\n    //         if (data.jwt){\n    //             setFormValue({email: '', password: ''});\n    //             handleLogin();\n    //             navigate('/', {replace: true});\n    //           }\n    //       })\n    //       .catch(err => console.log(err));\n    //   }\n\n    return (\n      <Sign\n        title={\"Вход\"}\n        buttonText={\"Войти\"}\n         name={\"login\"}\n        // // //onEditResult={onEditResult}\n        // // //onChange={handleChange}\n        // // //onSubmit={handleSubmit}\n        // // //emailFormValue={formValue.email}\n        // // //passwordFormValue={formValue.password}\n        />\n  )\n}\nexport default Login;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAAQC,WAAW,QAAQ,kBAAkB;AAC7C,OAAO,KAAKC,IAAI,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,KAAKA,CAAAC,IAAA,EAAgB;EAAA,IAAf;IAACC;EAAW,CAAC,GAAAD,IAAA;EACxB;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEF,OAAA,CAACJ,IAAI;IACHQ,KAAK,EAAE,MAAO;IACdC,UAAU,EAAE,OAAQ;IACnBC,IAAI,EAAE;IACP;IACA;IACA;IACA;IACA;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACC,EAAA,GA5CQV,KAAK;AA6Cd,eAAeA,KAAK;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}