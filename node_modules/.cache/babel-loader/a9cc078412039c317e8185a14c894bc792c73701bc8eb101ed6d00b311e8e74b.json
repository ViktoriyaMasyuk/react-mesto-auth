{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\n\n//регистрация пользователя\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"password\": \"somepassword\",\n      \"email\": \"email@yandex.ru\"\n    })\n  }).then(response => {\n    try {\n      if (response.status === 200) {\n        return response.json();\n      }\n    } catch (e) {\n      return e;\n    }\n  }).then(res => {\n    return res;\n  }).catch(err => console.log(err));\n};\nconst [formValue, setFormValue] = useState({\n  username: '',\n  password: ''\n});\nconst handleChange = e => {\n  const {\n    name,\n    value\n  } = e.target;\n  setFormValue({\n    ...formValue,\n    [name]: value\n  });\n};\nconst handleSubmit = e => {\n  e.preventDefault();\n  // здесь нужно будет добавить логин\n  if (!formValue.username || !formValue.password) {\n    return;\n  }\n  auth.authorize(formValue.username, formValue.password).then(data => {\n    // нужно проверить, есть ли у данных JWT\n    // сбросьте стейт, затем в колбэке установите\n    // стейт loggedIn родительского App как true,\n    // затем перенаправьте его в /diary\n  }).catch(err => console.log(err));\n};\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/auth/local`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      identifier,\n      password\n    })\n  }).then(response => response.json()).then(data => {\n    if (data.jwt) {\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    }\n  }).catch(err => console.log(err));\n};\n// // отправляем запрос на роут аутентификации\n// fetch(`${BASE_URL}/users/me`, {\n//   method: 'GET',\n//   headers: {\n//     \"Content-Type\": \"application/json\",\n//     \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n//   }\n// });","map":{"version":3,"names":["BASE_URL","register","password","email","fetch","method","headers","body","JSON","stringify","then","response","status","json","e","res","catch","err","console","log","formValue","setFormValue","useState","username","handleChange","name","value","target","handleSubmit","preventDefault","auth","authorize","data","identifier","jwt","localStorage","setItem"],"sources":["/Users/vika/dev/react-mesto-auth/src/utils/Auth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\n//регистрация пользователя\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\"password\": \"somepassword\",\n    \"email\": \"email@yandex.ru\" })\n  })\n  .then((response) => {\n    try {\n      if (response.status === 200){\n        return response.json();\n      }\n    } catch(e){\n      return (e)\n    }\n  })\n  .then((res) => {\n    return res;\n  })\n  .catch((err) => console.log(err));\n}; \n\nconst [formValue, setFormValue] = useState({\n    username: '',\n    password: ''\n  })\n\n  const handleChange = (e) => {\n    const {name, value} = e.target;\n\n    setFormValue({\n      ...formValue,\n      [name]: value\n    });\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // здесь нужно будет добавить логин\n    if (!formValue.username || !formValue.password){\n      return;\n    }\n    auth.authorize(formValue.username, formValue.password)\n      .then((data) => {\n        // нужно проверить, есть ли у данных JWT\n        // сбросьте стейт, затем в колбэке установите\n        // стейт loggedIn родительского App как true,\n        // затем перенаправьте его в /diary\n      })\n      .catch(err => console.log(err));\n  }\n\n  export const authorize = (email, password) => {\n    return fetch(`${BASE_URL}/auth/local`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({identifier, password})\n    })\n    .then((response => response.json()))\n    .then((data) => {\n      if (data.jwt){\n        localStorage.setItem('jwt', data.jwt);\n        return data;\n      }\n    })\n    .catch(err => console.log(err))\n  }; \n// // отправляем запрос на роут аутентификации\n// fetch(`${BASE_URL}/users/me`, {\n//   method: 'GET',\n//   headers: {\n//     \"Content-Type\": \"application/json\",\n//     \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n//   }\n// }); \n\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;;AAEvD;AACA,OAAO,MAAMC,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAC3C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAC,UAAU,EAAE,cAAc;MAChD,OAAO,EAAE;IAAkB,CAAC;EAC9B,CAAC,CAAC,CACDC,IAAI,CAAEC,QAAQ,IAAK;IAClB,IAAI;MACF,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAC;QAC1B,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;MACxB;IACF,CAAC,CAAC,OAAMC,CAAC,EAAC;MACR,OAAQA,CAAC;IACX;EACF,CAAC,CAAC,CACDJ,IAAI,CAAEK,GAAG,IAAK;IACb,OAAOA,GAAG;EACZ,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACnC,CAAC;AAED,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGC,QAAQ,CAAC;EACvCC,QAAQ,EAAE,EAAE;EACZrB,QAAQ,EAAE;AACZ,CAAC,CAAC;AAEF,MAAMsB,YAAY,GAAIV,CAAC,IAAK;EAC1B,MAAM;IAACW,IAAI;IAAEC;EAAK,CAAC,GAAGZ,CAAC,CAACa,MAAM;EAE9BN,YAAY,CAAC;IACX,GAAGD,SAAS;IACZ,CAACK,IAAI,GAAGC;EACV,CAAC,CAAC;AACJ,CAAC;AACD,MAAME,YAAY,GAAId,CAAC,IAAK;EAC1BA,CAAC,CAACe,cAAc,CAAC,CAAC;EAClB;EACA,IAAI,CAACT,SAAS,CAACG,QAAQ,IAAI,CAACH,SAAS,CAAClB,QAAQ,EAAC;IAC7C;EACF;EACA4B,IAAI,CAACC,SAAS,CAACX,SAAS,CAACG,QAAQ,EAAEH,SAAS,CAAClB,QAAQ,CAAC,CACnDQ,IAAI,CAAEsB,IAAI,IAAK;IACd;IACA;IACA;IACA;EAAA,CACD,CAAC,CACDhB,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACnC,CAAC;AAED,OAAO,MAAMc,SAAS,GAAGA,CAAC5B,KAAK,EAAED,QAAQ,KAAK;EAC5C,OAAOE,KAAK,CAAE,GAAEJ,QAAS,aAAY,EAAE;IACrCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACwB,UAAU;MAAE/B;IAAQ,CAAC;EAC7C,CAAC,CAAC,CACDQ,IAAI,CAAEC,QAAQ,IAAIA,QAAQ,CAACE,IAAI,CAAC,CAAE,CAAC,CACnCH,IAAI,CAAEsB,IAAI,IAAK;IACd,IAAIA,IAAI,CAACE,GAAG,EAAC;MACXC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEJ,IAAI,CAACE,GAAG,CAAC;MACrC,OAAOF,IAAI;IACb;EACF,CAAC,CAAC,CACDhB,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACjC,CAAC;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}